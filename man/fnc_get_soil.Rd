% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fnc_get_soil.R
\name{fnc_get_soil}
\alias{fnc_get_soil}
\title{Soil-list creation}
\usage{
fnc_get_soil(
  df.ids,
  soil_option,
  testgebiet,
  PTF_to_use,
  bze_buffer = NA,
  limit_MvG = T,
  df.soils = NULL,
  meta.out = NA,
  ...
)
}
\arguments{
\item{df.ids}{a data frame containing the following columns:
\itemize{
\item \code{ID_custom} - a unique ID-column for assignment that all intermediate products as well as the output will be assigned to.
\item \code{easting} and \code{northing} - coordinates in UTM EPSG:32632
}}

\item{soil_option}{whether BZE or STOK data should be used for modelling. While option \code{BZE} with a buffer of 50 shouldn't create NAs, option \code{STOK} builds on the data of the Standortskartierung Baden-Wuerttemberg that is not available everywhere (i.e. in private forests). Option \code{STOK_BZE} will complete the missing STOK-points with BZE-data. The final option is \code{OWN}, in which case users can enter their own soil data (i.e. from lab or field experiements). If the option \code{OWN} is selected, the dataframes must be passed at \code{df.soils}.}

\item{testgebiet}{at the current stage of development, we're working with test areas that have to be named here as \code{BDS} for Bodensee/07b, or \code{NPS} for National Park Schwarzwald. Eventually, this should be replaced by a BW-wide option. This parameter might be useful if a spatial pre-selection should be included for performance optimization...}

\item{PTF_to_use}{the PTF to be used in the modeling process. Options are \code{HYPRES}, \code{PTFPUH2}, or \code{WESSOLEK}. Alternatively, if MvG parameters have been retrieved elsewhere (i.e. by lab analyses), \code{OWN_PARMS} can be selected to skip this.}

\item{bze_buffer}{whether buffer should be used in extracting points from BZE raster files if \code{NAs} occur in {m}, default is \code{NA}}

\item{limit_MvG}{should the hydraulic parameters limited to "reasonable" ranges as described in \code{\link{fnc_limit}}. Default is \code{FALSE}.}

\item{df.soils}{if \code{OWN} is selected at soil_option, a data frame must be given here that contains the following columns
\itemize{
\item \code{ID} - a unique ID matching the IDs of df.ids
\item \code{mat} - number of soil layer starting with 1 counting upwards
\item \code{upper} and \code{lower} - upper and lower boundaries of soil layers in cm
\item \code{humus} - thickness of the humuslayer in m
}
Caution:\cr
If PTFs are to be applied, the columns required in \code{\link{fnc_PTF}} must be provided. Else, if \code{PTF_to_use} is set to \code{OWN_PARMS}, the following columns must be provided NA-free: \code{ths, thr, alpha, npar, mpar, ksat}, and \code{tort}.\cr
If roots are to be calculated, the columns required in \code{\link{fnc_roots}} must be provided. Otherwise they need to be stored in a column called \code{rootden}.\cr
If the nFK shall be calculated at some point, this will be done for the first 1m depth, so in this case one of the layers should end at 100cm depth.}

\item{...}{further function arguments to be passed down to \code{\link{fnc_roots}}. Includes all adjustment options to be found in \code{\link[LWFBrook90R]{make_rootden}}.}
}
\value{
Returns a list of soil data frames completely processed to be further used by \code{\link[LWFBrook90R]{run_multisite_LWFB90}} or \code{\link[LWFBrook90R]{run_LWFB90}}
}
\description{
This function is a wrapper of several functions and chunks of code and the main point of access for the final user. It takes a dataframe of coordinates of the points to be modeled and returns a list of soil data frames as required by \code{LWFBrook90R}. Adjustment options exist for the origin of soil data, the PTF to be used, whether MvG-parameters should be limited to a certain range, as well as all options for roots included in \code{\link[LWFBrook90R]{make_rootden}} and \link{fnc_roots} that can be passed down from here.
}
\examples{
# load Leitprofil-db:
df.LEIT.hum <- readxl::read_excel(paste0(input_stok, "testregionen/20200129_StokDB_Leitprofile_705.xlsx"),
                                  sheet = "STANDORTSEINHEITEN") \%>\%
  dplyr::select(RST_F, RST_DritteZeileHumus) \%>\%
  setNames(c("RST_F", "humusform"))
df.LEIT.BDS <- readxl::read_excel(paste0(input_stok, "testregionen/20200129_StokDB_Leitprofile_705.xlsx"),
                                  sheet = "LEITPROFIL") \%>\%
  dplyr::left_join(df.LEIT.hum, by = "RST_F")


df.LEIT.hum <- readxl::read_excel(paste0(input_stok, "testregionen/20200109_StokDB_Leitprofile_NLP.xlsx"),
                                  sheet = "STANDORTSEINHEITEN") \%>\%
  dplyr::select(RST_F, RST_DritteZeileHumus) \%>\%
  setNames(c("RST_F", "humusform"))
df.LEIT.NPS <- readxl::read_excel(paste0(input_stok, "testregionen/20200109_StokDB_Leitprofile_NLP.xlsx"),
                                  sheet = "LEITPROFIL")\%>\%
  dplyr::left_join(df.LEIT.hum, by = "RST_F")

# load STOKA - shapefiles
sf.STOK.BDS <- sf::st_read(dsn = paste0(input_gis, "Testgebiete/BDS/BDS_STOKA_Clip_UTM.shp"))
sf.STOK.NPS <- sf::st_read(dsn = paste0(input_gis, "Testgebiete/NPS/NP_STOKA_Clip_UTM.shp"))

fnc_get_soil(df.ids = test.ids.bds,
                soil_option = "STOK",
                testgebiet = "BDS",
                PTF_to_use = "HYPRES",
                rootsmethod = "hartmann",
                humus_roots = F)
fnc_get_soil(df.ids = test.ids.bds,
                soil_option = "STOK",
                testgebiet = "BDS",
                PTF_to_use = "HYPRES",
                rootsmethod = "betamodel",
                beta = 0.95) # specification from LWFBrook90::MakeRelRootDens
fnc_get_soil(df.ids = test.ids.bds,
                soil_option = "BZE",
                testgebiet = "BDS",
                PTF_to_use = "HYPRES",
                rootsmethod = "betamodel",
                beta = 0.95)


# sample data frame with "own" data
df.own.test <- data.frame("ID_custom" = c(rep("E",4), rep("D",4), rep("C",4), rep("B",4), rep("A",4)),
                          "mat" = rep(1:4, 5),
                          "upper" = c(0,5,10,30, 0,10,50,60, 0,5,10,30, 0,10,50,60, 0,15,20,70),
                          "lower" = c(5,10,30,60, 10,50,60,100, 5,10,30,60, 10,50,60,100, 15,20,70,100),
                          "sand" = rep(30, 20),
                          "silt" = rep(40, 20),
                          "clay" = rep(30, 20),
                          "oc.pct" = c(5,2,1,0,4,1,0,0, 5,2,1,0,4,1,0,0,8,2,0,0),
                          "bd" = c(1.1,1.2,1.4,1.5,1,1.2, 1.2, 1.3, 1.1,1.2,1.4,1.5,1,1.2, 1.2, 1.3, 1.1,1.4, 1.6, 1.6 ),
                          "gravel" = c(1,5,5,20, 0,0,10,15, 5,8,8,10, 20,20,25,60,0,0,0,0) ,
                          "humus" = c(rep(0.04,4), rep(0.06, 4), rep(0.04,4), rep(0.1, 4), rep(0.05, 4)))

fnc_get_soil(df.ids = test.ids.bds,
                soil_option = "OWN",
                testgebiet = "BDS",
                PTF_to_use = "HYPRES",
                df.soils = df.own.test,
                rootsmethod = "betamodel",
                beta = 0.95)
}
