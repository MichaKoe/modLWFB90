% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fnc_create_soil.R
\name{fnc_create_soil}
\alias{fnc_create_soil}
\title{Soil-list creation}
\usage{
fnc_create_soil(
  df.ids,
  soil_option,
  testgebiet,
  PTF,
  limit_MvG = F,
  df.soils = NULL,
  ...
)
}
\arguments{
\item{df.ids}{a data frame containing the following columns: \code{ID} - a unique ID-column for assignment that all intermediate products as well as the output will be assigned to. \code{easting} and \code{northing} - coordinates in UTM EPSG:32632}

\item{soil_option}{whether BZE or STOK data should be used for modelling. While option \code{BZE} shouldn't create NAs, option \code{STOK} builds on the data of the Standortskartierung Baden-Wuerttemberg that is not available everywhere (i.e. in private forests). The functions asks the used how to deal with NAs, whether they should be excluded, or completed with BZE-data. Third option is \code{OWN}, in which case users can enter their own soil data (i.e. from lab or field experiements). If the option \code{OWN} is selected, the dataframe to be}

\item{testgebiet}{at the current stage of development, we're working with test areas that have to be named here as \code{BDS} for Bodensee/07b, or \code{NPS} for National Park Schwarzwald. Eventually, this should be replaced by a BW-wide option. This parameter might be useful if a spatial pre-selection should be included for performance optimization...}

\item{PTF}{the PTF to be used in the modeling process. Options are \code{HYPRES}, \code{PTFPUH2}, or \code{WESSOLEK}. Alternatively, if MvG parameters have been retrieved elsewhere (i.e. by lab analyses), \code{OWN_PARMS} can be selected to skip this.}

\item{limit_MvG}{should the hydraulic parameters limited to "reasonable" ranges as described in \code{\link{fnc_limit_MvG}}. Default is \code{FALSE}.}

\item{df.soils}{if \code{OWN} is selected at soil_option, a data frame must be given here that contains the following columns  \code{ID} - a unique ID matching the IDs of df.ids,  \code{mat} - number of soil layer starting with 1 counting upwards, \code{upper} and \code{lower} - upper and lower boundaries of soil layers in cm. If a humus layer should be added, there must be a column \code{humus}, that contains the thickness of the humuslayer in m.\cr
Caution:\cr
If PTFs are to be applied, the columns required in \code{\link{fnc_PTF}} must be provided. Else, if \code{PTF} is set to \code{OWN_PARMS}, the following columns must be provided NA-free: \code{ths, thr, alpha, npar, mpar, ksat}, and \code{tort}.\cr
If roots are to be calculated, the columns required in \code{\link{fnc_roots}} must be provided. Otherwise they need to be stored in a column called \code{rootden}.}

\item{...}{further function arguments to be passed down to \code{\link{fnc_roots}}. Includes all adjustment options to be found in \code{\link[LWFBrook90R]{MakeRelRootDens}}.}
}
\value{
Returns a list of soil data frames completely processed to be further used in \code{\link[LWFBrook90R]{msiterunLWFB90}}.
}
\description{
This function is a wrapper of several functions and chunks of code and the main point of access for the final user. It takes a dataframe of coordinates of the points to be modeled and returns a list of soil data frames as required by \code{LWFBrook90R}. Adjustment options exist for the origin of soil data, the PTF to be used, whether MvG-parameters should be limited to a certain range, as well as all options for roots included in \code{\link[LWFBrook90R]{MakeRelRootDens}} and \link{fnc_roots} that can be passed down from here.
}
\examples{
test.ids.bds <- data.frame("ID" = c(1,2, 3, 4, 5),
                           "easting" = c(493497, 503000, 515138, 501000, 503330),
                           "northing" = c(5281811, 5292500, 5289355, 5293600, 5291700))

# Leitprofil-db:
df.LEIT.BDS <- readxl::read_excel(paste0(input_stok, "testregionen/20200129_StokDB_Leitprofile_705.xlsx"),
                          sheet = "LEITPROFIL")

df.LEIT.NPS <- readxl::read_excel(paste0(input_stok, "testregionen/20200109_StokDB_Leitprofile_NLP.xlsx"),
                          sheet = "LEITPROFIL")

# STOKA - shapefiles
sf.STOK.BDS <- sf::st_read(dsn = paste0(input_gis, "Testgebiete/BDS/BDS_STOKA_Clip_UTM.shp")) \%>\%
  sf::st_transform(crs = 32632)
sf.STOK.BDS <- sf.STOK.BDS[c("RST_F", "geometry")]


sf.STOK.NPS <- sf::st_read(dsn = paste0(input_gis, "Testgebiete/NPS/NP_STOKA_Clip_UTM.shp")) \%>\%
  sf::st_transform(crs = 32632)
sf.STOK.NPS <- sf.STOK.NPS[c("RST_F", "geometry")]

fnc_create_soil(df.ids = test.ids.bds,
                soil_option = "STOK",
                testgebiet = "BDS",
                PTF = "HYPRES",
                rootsmethod = "hartmann",
                humus_roots = F)
fnc_create_soil(df.ids = test.ids.bds,
                soil_option = "STOK",
                testgebiet = "BDS",
                PTF = "HYPRES",
                rootsmethod = "betamodel",
                beta = 0.95)
fnc_create_soil(df.ids = test.ids.bds,
                soil_option = "BZE",
                testgebiet = "BDS",
                PTF = "HYPRES",
                rootsmethod = "betamodel",
                beta = 0.95)
}
